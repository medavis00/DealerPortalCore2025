@page "/scheduler"
@using Radzen
@using Radzen.Blazor

<h3>Radzen Blazor Scheduler</h3>

@* <RadzenScheduler Data="@Events"
                 StartProperty="Start"
                 EndProperty="End"
                 TextProperty="Title"
                 @bind-Date="currentDate"
                 @bind-View="currentView"
                 SlotDuration="TimeSpan.FromMinutes(30)"
                 ShowTodayButton="true"
                 ShowViewButtons="true"
                 ShowDatePicker="true"
                 ShowTimeZone="true"
                 ShowCurrentTimeIndicator="true"
                 ShowWeekend="true"
                 AllowCreate="true"
                 AllowDelete="true"
                 AllowEdit="true"
                 @OnSlotSelect="OnSlotSelect"
                 @OnAppointmentSelect="OnAppointmentSelect"
                 @OnAppointmentUpdate="OnAppointmentUpdate">
</RadzenScheduler>
 *@
<RadzenScheduler Data="@Events"
                 StartProperty="Start"
                 EndProperty="End"
                 TextProperty="Title"
                 @bind-Date="currentDate"
                 @bind-View="currentView"
                 AllowCreate="true"
                 AllowDelete="true"
                 AllowEdit="true"
                 @OnAppointmentChange="OnAppointmentUpdate">
</RadzenScheduler>


@code {
    private DateTime currentDate = DateTime.Today;
    private string currentView = "Week";

    private List<EventModel> Events = new List<EventModel>
    {
        new EventModel { Id = 1, Title = "Meeting", Start = DateTime.Today.AddHours(9), End = DateTime.Today.AddHours(10) },
        new EventModel { Id = 2, Title = "Workshop", Start = DateTime.Today.AddDays(1).AddHours(14), End = DateTime.Today.AddDays(1).AddHours(16) }
    };

    // private void OnAppointmentUpdate(SchedulerChangeEventArgs<EventModel> args)
    // {
    //     var eventToUpdate = Events.FirstOrDefault(e => e.Id == args.Item.Id);
    //     if (eventToUpdate != null)
    //     {
    //         eventToUpdate.Start = args.Item.Start;
    //         eventToUpdate.End = args.Item.End;
    //     }
    // }

    private class EventModel
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public DateTime Start { get; set; }
        public DateTime End { get; set; }
    }
}
